{"version":3,"file":"static/js/3.dcf30b4b.chunk.js","mappings":"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","sources":["redux/contacts/cont-selectors.js","webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","webpack://react-homework-template/./src/components/ContactItem/contactItem.module.css?65f5","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","pages/PhonebookPage.js"],"sourcesContent":["const selectContacts = state => state.contacts.contacts.items;\nconst selectIsLoading = state => state.contacts.contacts.isLoading;\nconst selectError = state => state.contacts.contacts.error;\n\nconst selectFilterValue = state => state.filter;\n\nconst selectors = {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilterValue,\n};\n\nexport default selectors;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contactForm_title__0HqsU\",\"form\":\"contactForm_form__3ay0L\",\"input\":\"contactForm_input__wCtae\",\"button\":\"contactForm_button__JixDz\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { contactsSelectors } from 'redux/contacts';\nimport { contactsOperations } from 'redux/contacts';\nimport css from './contactForm.module.css';\n\nexport default function ContactForm() {\n  const [friend, setFriend] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const prevContacts = useSelector(contactsSelectors.selectContacts);\n\n  const contact = { name: friend, number: number };\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'friend') {\n      setFriend(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const reset = () => {\n    setFriend('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const message = contact.name + ' is already in contacts';\n\n    if (prevContacts.find(prevContact => prevContact.name === contact.name)) {\n      alert(message);\n    } else {\n      dispatch(contactsOperations.addContact(contact));\n    }\n\n    reset();\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"friend\"\n            value={friend}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я\n              ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe,\n      dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de\n      Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contactList_title__WDT9z\",\"contactsList\":\"contactList_contactsList__iMmmj\",\"input\":\"contactList_input__s7GqN\"};","// extracted by mini-css-extract-plugin\nexport default {\"deleteBtn\":\"contactItem_deleteBtn__ZNzk7\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { contactsOperations } from 'redux/contacts';\nimport css from './contactItem.module.css';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      {name}: {number}{' '}\n      <button\n        className={css.deleteBtn}\n        type=\"button\"\n        onClick={() => dispatch(contactsOperations.deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux/es/hooks/useSelector';\n\nimport css from './contactList.module.css';\nimport ContactItem from '../ContactItem';\nimport { contactsSelectors } from 'redux/contacts';\n\nexport default function ContactList() {\n  const filterValue = useSelector(contactsSelectors.selectFilterValue);\n\n  const contacts = useSelector(contactsSelectors.selectContacts).filter(\n    contact => contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__sX944\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './filter.module.css';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { contactsSelectors } from 'redux/contacts';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const value = event.target.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={useSelector(contactsSelectors.selectFilterValue)}\n        onChange={handleChange}\n        title=\"Search contacts\"\n      />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { contactsOperations } from 'redux/contacts';\n\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nimport { contactsSelectors } from 'redux/contacts';\n\nexport default function Phonebook() {\n  const isLoading = useSelector(contactsSelectors.selectIsLoading);\n  const error = useSelector(contactsSelectors.selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <hr />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","ContactForm","useState","friend","setFriend","number","setNumber","dispatch","useDispatch","prevContacts","useSelector","contactsSelectors","contact","name","handleChange","target","value","className","css","onSubmit","event","preventDefault","message","find","prevContact","alert","contactsOperations","type","onChange","pattern","title","required","ContactItem","id","onClick","ContactList","filterValue","toLowerCase","includes","map","Filter","changeFilter","Phonebook","useEffect"],"sourceRoot":""}